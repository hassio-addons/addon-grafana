#!/command/with-contenv bashio
# shellcheck shell=bash
# ==============================================================================
# Home Assistant Community Add-on: Grafana
# Configures Grafana
# ==============================================================================
readonly CONFIG="/etc/grafana/grafana.ini"
declare ingress_entry
declare log_level

# Configures Grafana with the add-on log level
log_level="Info"
if bashio::config.exists 'log_level'; then
    case "$(bashio::string.lower "$(bashio::config 'log_level')")" in
        all|trace)
            log_level="Trace"
            ;;
        debug)
            log_level="Debug"
            ;;
        info|notice)
            log_level="Info"
            ;;
        warning)
            log_level="Warn"
            ;;
        error)
            log_level="Error"
            ;;
        fatal|off)
            log_level="Critical"
            ;;
    esac
fi
sed -i "s/level = Info/level = ${log_level}/g" "${CONFIG}"

# Sets unique secret key used for signing cookies.
if ! bashio::fs.file_exists "/data/secret"; then
    echo "${SUPERVISOR_TOKEN}" > /data/secret
fi
secret=$(</data/secret)
sed -i "s/secret_key.*/secret_key = ${secret}/g" "${CONFIG}"

ingress_entry=$(bashio::addon.ingress_entry)
sed -i "s#%%ingress_entry%%#${ingress_entry}#g" "${CONFIG}"

# Install user configured/requested Grafana plugins
if bashio::config.has_value 'plugins'; then
    for plugin in $(bashio::config 'plugins|keys'); do
        name=$(bashio::config "plugins[${plugin}].name")
        if bashio::config.exists "plugins[${plugin}].url"; then
            url=$(bashio::config "plugins[${plugin}].url")
            bashio::log.debug "Installing ${name} from ${url}"
            grafana-cli --pluginUrl ${url} plugins install "$name" \
                || bashio::exit.nok "Failed installing Grafana plugin: ${name} from: ${url}"
        else
            bashio::log.debug "Installing ${name}"
            grafana-cli plugins install "$name" \
                || bashio::exit.nok "Failed installing Grafana plugin: ${name}"
		fi
    done
fi
